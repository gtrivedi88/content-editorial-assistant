# ================================
# TESTING FRAMEWORK
# ================================
pytest>=7.4.0,<9.0.0
pytest-flask>=1.2.0,<2.0.0
pytest-asyncio>=0.21.0,<1.0.0
pytest-cov>=4.1.0,<5.0.0
pytest-html>=4.0.0,<5.0.0
pytest-xdist>=3.3.0,<4.0.0  # Parallel test execution
pytest-timeout>=2.1.0,<3.0.0
pytest-mock>=3.11.0,<4.0.0
pytest-json-report>=1.5.0,<2.0.0  # JSON test results for test_runner

# ================================
# UI/E2E TESTING
# ================================
playwright>=1.40.0,<2.0.0
selenium>=4.15.0,<5.0.0  # Backup option

# ================================
# API TESTING
# ================================
requests>=2.30.0,<3.0.0
httpx>=0.25.0,<1.0.0

# ================================
# PERFORMANCE TESTING
# ================================
locust>=2.15.0,<3.0.0  # Load testing
memory-profiler>=0.61.0,<1.0.0
pytest-benchmark>=4.0.0,<5.0.0

# ================================
# CODE QUALITY & COVERAGE
# ================================
coverage>=7.3.0,<8.0.0
pytest-cov>=4.1.0,<5.0.0
radon>=6.0.0,<7.0.0  # Code complexity
pylint>=3.0.0,<4.0.0
flake8>=6.1.0,<8.0.0
black>=23.10.0,<25.0.0
isort>=5.12.0,<6.0.0
mypy>=1.5.0,<2.0.0
bandit>=1.7.5,<2.0.0  # Security testing

# ================================
# VISUAL REGRESSION
# ================================
pillow>=10.0.0,<11.0.0  # Image comparison
imagehash>=4.3.0,<5.0.0

# ================================
# ACCESSIBILITY TESTING
# ================================
axe-selenium-python>=2.1.0,<3.0.0

# ================================
# REPORTING
# ================================
reportlab>=4.0.0,<5.0.0  # PDF reports
matplotlib>=3.7.0,<4.0.0
seaborn>=0.12.0,<1.0.0
pandas>=2.0.0,<3.0.0
jinja2>=3.1.0,<4.0.0
plotly>=5.17.0,<6.0.0  # Interactive charts

# ================================
# AI ANALYSIS (OPTIONAL)
# ================================
# Install ONLY if using API-based AI analysis
# Uncomment the provider you want to use:
#
# openai>=1.3.0,<2.0.0  # For OpenAI GPT models
# anthropic>=0.8.0,<1.0.0  # For Anthropic Claude models
#
# For local Ollama: no pip package needed, install Ollama separately

# ================================
# DATABASE TESTING
# ================================
faker>=20.0.0,<22.0.0  # Test data generation
factory-boy>=3.3.0,<4.0.0

# ================================
# MOCKING & FIXTURES
# ================================
responses>=0.24.0,<1.0.0  # Mock HTTP responses
freezegun>=1.4.0,<2.0.0  # Mock time

