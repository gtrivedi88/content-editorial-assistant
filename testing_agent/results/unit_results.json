{"created": 1759346842.422394, "duration": 11.025602340698242, "exitcode": 1, "root": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant", "environment": {}, "summary": {"failed": 41, "passed": 3, "total": 44, "collected": 44}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules", "type": "Package"}]}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_check_method", "type": "Function", "lineno": 13}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_check_returns_list", "type": "Function", "lineno": 18}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_name", "type": "Function", "lineno": 25}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_description", "type": "Function", "lineno": 30}]}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_returns_error_format", "type": "Function", "lineno": 40}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_handles_empty_text", "type": "Function", "lineno": 52}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_handles_none_text", "type": "Function", "lineno": 60}]}, {"nodeid": "tests/unit/rules/test_base_rule.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist::test_all_rules_importable", "type": "Function", "lineno": 31}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist::test_all_rules_have_check_method", "type": "Function", "lineno": 46}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_language_grammar_rules", "type": "Function", "lineno": 71}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_punctuation_rules", "type": "Function", "lineno": 82}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_word_usage_rules", "type": "Function", "lineno": 92}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_structure_format_rules", "type": "Function", "lineno": 100}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_numbers_measurement_rules", "type": "Function", "lineno": 110}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_technical_elements_rules", "type": "Function", "lineno": 117}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_base_rule_interface", "type": "Function", "lineno": 129}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_rule_check_returns_list", "type": "Function", "lineno": 136}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_rule_handles_empty_text", "type": "Function", "lineno": 143}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration::test_multiple_rules_on_same_text", "type": "Function", "lineno": 156}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration::test_rules_with_different_severities", "type": "Function", "lineno": 176}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist", "type": "Class"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories", "type": "Class"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface", "type": "Class"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer::test_detect_passive_voice", "type": "Function", "lineno": 17}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer::test_active_voice_no_issues", "type": "Function", "lineno": 25}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule::test_missing_article", "type": "Function", "lineno": 38}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule::test_correct_articles", "type": "Function", "lineno": 47}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule::test_verb_agreement", "type": "Function", "lineno": 60}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule::test_correct_verbs", "type": "Function", "lineno": 69}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule::test_pronoun_usage", "type": "Function", "lineno": 83}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule::test_ambiguous_pronouns", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer", "type": "Class"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule::test_comma_usage", "type": "Function", "lineno": 17}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule::test_missing_comma", "type": "Function", "lineno": 25}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule::test_period_usage", "type": "Function", "lineno": 39}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule::test_missing_period", "type": "Function", "lineno": 47}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule::test_quotation_marks", "type": "Function", "lineno": 61}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule::test_mismatched_quotes", "type": "Function", "lineno": 69}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule::test_hyphen_usage", "type": "Function", "lineno": 83}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule::test_missing_hyphen", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule::test_long_sentence_detected", "type": "Function", "lineno": 17}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule::test_short_sentences_ok", "type": "Function", "lineno": 27}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule::test_detect_second_person", "type": "Function", "lineno": 40}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule::test_third_person_preferred", "type": "Function", "lineno": 49}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule::test_heading_format", "type": "Function", "lineno": 62}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule::test_improper_heading_hierarchy", "type": "Function", "lineno": 70}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule::test_list_format", "type": "Function", "lineno": 84}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule::test_inconsistent_list_punctuation", "type": "Function", "lineno": 97}]}, {"nodeid": "tests/unit/rules/test_style_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule", "type": "Class"}]}, {"nodeid": "tests/unit/rules", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_style_rules.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_check_method", "lineno": 13, "outcome": "failed", "keywords": ["test_base_rule_has_check_method", "TestBaseRule", "unit", "test_base_rule.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0005986339965602383, "outcome": "passed"}, "call": {"duration": 0.00011342300422256812, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_base_rule.py", "lineno": 16, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_base_rule.py", "lineno": 16, "message": "in test_base_rule_has_check_method"}], "longrepr": "tests/unit/rules/test_base_rule.py:16: in test_base_rule_has_check_method\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 0.00012240000069141388, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_check_returns_list", "lineno": 18, "outcome": "failed", "keywords": ["test_base_rule_check_returns_list", "TestBaseRule", "unit", "test_base_rule.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016270599735435098, "outcome": "passed"}, "call": {"duration": 7.727499905740842e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_base_rule.py", "lineno": 21, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_base_rule.py", "lineno": 21, "message": "in test_base_rule_check_returns_list"}], "longrepr": "tests/unit/rules/test_base_rule.py:21: in test_base_rule_check_returns_list\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 9.149200195679441e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_name", "lineno": 25, "outcome": "failed", "keywords": ["test_base_rule_has_name", "TestBaseRule", "unit", "test_base_rule.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001523059981991537, "outcome": "passed"}, "call": {"duration": 6.880999717395753e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_base_rule.py", "lineno": 28, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_base_rule.py", "lineno": 28, "message": "in test_base_rule_has_name"}], "longrepr": "tests/unit/rules/test_base_rule.py:28: in test_base_rule_has_name\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 8.367699774680659e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_description", "lineno": 30, "outcome": "failed", "keywords": ["test_base_rule_has_description", "TestBaseRule", "unit", "test_base_rule.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001442299981135875, "outcome": "passed"}, "call": {"duration": 7.08029983798042e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_base_rule.py", "lineno": 33, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_base_rule.py", "lineno": 33, "message": "in test_base_rule_has_description"}], "longrepr": "tests/unit/rules/test_base_rule.py:33: in test_base_rule_has_description\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 8.73039971338585e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_returns_error_format", "lineno": 40, "outcome": "failed", "keywords": ["test_rule_returns_error_format", "TestRuleInterface", "unit", "test_base_rule.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00014008300058776513, "outcome": "passed"}, "call": {"duration": 7.214500510599464e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_base_rule.py", "lineno": 43, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_base_rule.py", "lineno": 43, "message": "in test_rule_returns_error_format"}], "longrepr": "tests/unit/rules/test_base_rule.py:43: in test_rule_returns_error_format\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 8.31360011943616e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_handles_empty_text", "lineno": 52, "outcome": "failed", "keywords": ["test_rule_handles_empty_text", "TestRuleInterface", "unit", "test_base_rule.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001380399990011938, "outcome": "passed"}, "call": {"duration": 7.562200335087255e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_base_rule.py", "lineno": 55, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_base_rule.py", "lineno": 55, "message": "in test_rule_handles_empty_text"}], "longrepr": "tests/unit/rules/test_base_rule.py:55: in test_rule_handles_empty_text\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 8.410799637204036e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_handles_none_text", "lineno": 60, "outcome": "failed", "keywords": ["test_rule_handles_none_text", "TestRuleInterface", "unit", "test_base_rule.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001384899951517582, "outcome": "passed"}, "call": {"duration": 7.443000504281372e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_base_rule.py", "lineno": 63, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_base_rule.py", "lineno": 63, "message": "in test_rule_handles_none_text"}], "longrepr": "tests/unit/rules/test_base_rule.py:63: in test_rule_handles_none_text\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 8.398800127906725e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist::test_all_rules_importable", "lineno": 31, "outcome": "passed", "keywords": ["test_all_rules_importable", "TestAllRulesExist", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00013888000103179365, "outcome": "passed"}, "call": {"duration": 0.27833124400058296, "outcome": "passed"}, "teardown": {"duration": 0.0001778939986252226, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist::test_all_rules_have_check_method", "lineno": 46, "outcome": "failed", "keywords": ["test_all_rules_have_check_method", "TestAllRulesExist", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00028626700077438727, "outcome": "passed"}, "call": {"duration": 0.0015059479992487468, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 65, "message": "AssertionError: Rules missing check():\n  rules/ambiguity_rule.py: AmbiguityRule missing check() method\n  rules/base_rule.py: BaseRule missing check() method\n  rules/second_person_rule.py: SecondPersonRule missing check() method\n  rules/sentence_length_rule.py: SentenceLengthRule missing check() method\n  rules/audience_and_medium/conversational_style_rule.py: ConversationalStyleRule missing check() method\n  rules/audience_and_medium/llm_consumability_rule.py: LLMConsumabilityRule missing check() method\n  rules/audience_and_medium/base_audience_rule.py: BaseAudienceRule missing check() method\n  rules/audience_and_medium/global_audiences_rule.py: GlobalAudiencesRule missing check() method\n  rules/audience_and_medium/tone_rule.py: ToneRule missing check() method\n  rules/language_and_grammar/base_language_rule.py: BaseLanguageRule missing check() method\n  rules/language_and_grammar/conjunctions_rule.py: ConjunctionsRule missing check() method\n  rules/language_and_grammar/prepositions_rule.py: PrepositionsRule missing check() method\n  rules/language_and_grammar/pronouns_rule.py: PronounsRule missing check() method\n  rules/language_and_grammar/spelling_rule.py: SpellingRule missing check() method\n  rules/language_and_grammar/terminology_rule.py: TerminologyRule missing check() method\n  rules/language_and_grammar/abbreviations_rule.py: AbbreviationsRule missing check() method\n  rules/language_and_grammar/adverbs_only_rule.py: AdverbsOnlyRule missing check() method\n  rules/language_and_grammar/anthropomorphism_rule.py: AnthropomorphismRule missing check() method\n  rules/language_and_grammar/articles_rule.py: ArticlesRule missing check() method\n  rules/language_and_grammar/capitalization_rule.py: CapitalizationRule missing check() method\nassert 20 == 0\n +  where 20 = len(['rules/ambiguity_rule.py: AmbiguityRule missing check() method', 'rules/base_rule.py: BaseRule missing check() method', 'rules/second_person_rule.py: SecondPersonRule missing check() method', 'rules/sentence_length_rule.py: SentenceLengthRule missing check() method', 'rules/audience_and_medium/conversational_style_rule.py: ConversationalStyleRule missing check() method', 'rules/audience_and_medium/llm_consumability_rule.py: LLMConsumabilityRule missing check() method', ...])"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 65, "message": "in test_all_rules_have_check_method"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:65: in test_all_rules_have_check_method\n    assert len(errors) == 0, f\"Rules missing check():\\n\" + \"\\n\".join(errors)\nE   AssertionError: Rules missing check():\nE     rules/ambiguity_rule.py: AmbiguityRule missing check() method\nE     rules/base_rule.py: BaseRule missing check() method\nE     rules/second_person_rule.py: SecondPersonRule missing check() method\nE     rules/sentence_length_rule.py: SentenceLengthRule missing check() method\nE     rules/audience_and_medium/conversational_style_rule.py: ConversationalStyleRule missing check() method\nE     rules/audience_and_medium/llm_consumability_rule.py: LLMConsumabilityRule missing check() method\nE     rules/audience_and_medium/base_audience_rule.py: BaseAudienceRule missing check() method\nE     rules/audience_and_medium/global_audiences_rule.py: GlobalAudiencesRule missing check() method\nE     rules/audience_and_medium/tone_rule.py: ToneRule missing check() method\nE     rules/language_and_grammar/base_language_rule.py: BaseLanguageRule missing check() method\nE     rules/language_and_grammar/conjunctions_rule.py: ConjunctionsRule missing check() method\nE     rules/language_and_grammar/prepositions_rule.py: PrepositionsRule missing check() method\nE     rules/language_and_grammar/pronouns_rule.py: PronounsRule missing check() method\nE     rules/language_and_grammar/spelling_rule.py: SpellingRule missing check() method\nE     rules/language_and_grammar/terminology_rule.py: TerminologyRule missing check() method\nE     rules/language_and_grammar/abbreviations_rule.py: AbbreviationsRule missing check() method\nE     rules/language_and_grammar/adverbs_only_rule.py: AdverbsOnlyRule missing check() method\nE     rules/language_and_grammar/anthropomorphism_rule.py: AnthropomorphismRule missing check() method\nE     rules/language_and_grammar/articles_rule.py: ArticlesRule missing check() method\nE     rules/language_and_grammar/capitalization_rule.py: CapitalizationRule missing check() method\nE   assert 20 == 0\nE    +  where 20 = len(['rules/ambiguity_rule.py: AmbiguityRule missing check() method', 'rules/base_rule.py: BaseRule missing check() method', 'rules/second_person_rule.py: SecondPersonRule missing check() method', 'rules/sentence_length_rule.py: SentenceLengthRule missing check() method', 'rules/audience_and_medium/conversational_style_rule.py: ConversationalStyleRule missing check() method', 'rules/audience_and_medium/llm_consumability_rule.py: LLMConsumabilityRule missing check() method', ...])"}, "teardown": {"duration": 0.00016092200530692935, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_language_grammar_rules", "lineno": 71, "outcome": "failed", "keywords": ["test_language_grammar_rules", "TestRuleCategories", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00018932500097434968, "outcome": "passed"}, "call": {"duration": 1.8578920700019808, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 80, "message": "AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 80, "message": "in test_language_grammar_rules"}], "stdout": "\u2713 Pre-compiled 150 regex patterns in 0.008s\n\u2713 Loaded spaCy model: en_core_web_sm\n\u2713 Pre-compiled 150 regex patterns in 0.003s\n\u2713 Loaded spaCy model: en_core_web_sm\n\u2713 Loaded SpaCy model: en_core_web_sm\n\u2713 Pre-compiled 150 regex patterns in 0.003s\n\u2713 Loaded spaCy model: en_core_web_sm\n\u2713 Loaded SpaCy model: en_core_web_sm\n\u2713 Pre-compiled 150 regex patterns in 0.003s\n\u2713 Loaded spaCy model: en_core_web_sm\n\u2713 Initialized domain classifier for domain validation\n\u2713 Pre-compiled 150 regex patterns in 0.003s\n\u2713 Loaded spaCy model: en_core_web_sm\n", "longrepr": "tests/unit/rules/test_comprehensive_rules.py:80: in test_language_grammar_rules\n    issues = analyzer.check(passive_text)\n             ^^^^^^^^^^^^^^\nE   AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "teardown": {"duration": 0.00013114600005792454, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_punctuation_rules", "lineno": 82, "outcome": "failed", "keywords": ["test_punctuation_rules", "TestRuleCategories", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00022480200277641416, "outcome": "passed"}, "call": {"duration": 0.0048030800026026554, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 90, "message": "AttributeError: 'CommasRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 90, "message": "in test_punctuation_rules"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:90: in test_punctuation_rules\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'CommasRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00011703999916790053, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_word_usage_rules", "lineno": 92, "outcome": "failed", "keywords": ["test_word_usage_rules", "TestRuleCategories", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00018272300076205283, "outcome": "passed"}, "call": {"duration": 0.00035110899625578895, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 99, "message": "assert 0 > 0\n +  where 0 = len([])"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 99, "message": "in test_word_usage_rules"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:99: in test_word_usage_rules\n    assert len(rule_files) > 0\nE   assert 0 > 0\nE    +  where 0 = len([])"}, "teardown": {"duration": 9.152200073003769e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_structure_format_rules", "lineno": 100, "outcome": "failed", "keywords": ["test_structure_format_rules", "TestRuleCategories", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001696580002317205, "outcome": "passed"}, "call": {"duration": 0.005016079005145002, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 108, "message": "AttributeError: 'HeadingsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 108, "message": "in test_structure_format_rules"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:108: in test_structure_format_rules\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'HeadingsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00010025800293078646, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_numbers_measurement_rules", "lineno": 110, "outcome": "passed", "keywords": ["test_numbers_measurement_rules", "TestRuleCategories", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016223500279011205, "outcome": "passed"}, "call": {"duration": 0.0001993749974644743, "outcome": "passed"}, "teardown": {"duration": 0.00011283200001344085, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_technical_elements_rules", "lineno": 117, "outcome": "passed", "keywords": ["test_technical_elements_rules", "TestRuleCategories", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00014358000044012442, "outcome": "passed"}, "call": {"duration": 0.00013459299952955917, "outcome": "passed"}, "teardown": {"duration": 7.904799713287503e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_base_rule_interface", "lineno": 129, "outcome": "failed", "keywords": ["test_base_rule_interface", "TestRuleInterface", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016928800323512405, "outcome": "passed"}, "call": {"duration": 7.721500151092187e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 132, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 132, "message": "in test_base_rule_interface"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:132: in test_base_rule_interface\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 9.635100286686793e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_rule_check_returns_list", "lineno": 136, "outcome": "failed", "keywords": ["test_rule_check_returns_list", "TestRuleInterface", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015691500448156148, "outcome": "passed"}, "call": {"duration": 7.849800022086129e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 139, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 139, "message": "in test_rule_check_returns_list"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:139: in test_rule_check_returns_list\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 8.994899690151215e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_rule_handles_empty_text", "lineno": 143, "outcome": "failed", "keywords": ["test_rule_handles_empty_text", "TestRuleInterface", "unit", "test_comprehensive_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00014787800319027156, "outcome": "passed"}, "call": {"duration": 7.086299592629075e-05, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 146, "message": "TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 146, "message": "in test_rule_handles_empty_text"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:146: in test_rule_handles_empty_text\n    rule = BaseRule()\n           ^^^^^^^^^^\nE   TypeError: Can't instantiate abstract class BaseRule without an implementation for abstract methods '_get_rule_type', 'analyze'"}, "teardown": {"duration": 0.00011765099770855159, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration::test_multiple_rules_on_same_text", "lineno": 156, "outcome": "failed", "keywords": ["test_multiple_rules_on_same_text", "TestRuleIntegration", "integration", "test_comprehensive_rules.py", "rules", "unit", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015007200272521004, "outcome": "passed"}, "call": {"duration": 0.00900266599637689, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 167, "message": "AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 167, "message": "in test_multiple_rules_on_same_text"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:167: in test_multiple_rules_on_same_text\n    passive_issues = passive_analyzer.check(text)\n                     ^^^^^^^^^^^^^^^^^^^^^^\nE   AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "teardown": {"duration": 0.00014249700325308368, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration::test_rules_with_different_severities", "lineno": 176, "outcome": "failed", "keywords": ["test_rules_with_different_severities", "TestRuleIntegration", "integration", "test_comprehensive_rules.py", "rules", "unit", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001950859950738959, "outcome": "passed"}, "call": {"duration": 0.004676943004596978, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_comprehensive_rules.py", "lineno": 184, "message": "AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_comprehensive_rules.py", "lineno": 184, "message": "in test_rules_with_different_severities"}], "longrepr": "tests/unit/rules/test_comprehensive_rules.py:184: in test_rules_with_different_severities\n    issues = analyzer.check(text)\n             ^^^^^^^^^^^^^^\nE   AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "teardown": {"duration": 0.00010934499732684344, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer::test_detect_passive_voice", "lineno": 17, "outcome": "failed", "keywords": ["test_detect_passive_voice", "TestPassiveVoiceAnalyzer", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00017120200209319592, "outcome": "passed"}, "call": {"duration": 0.004631667994544841, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 23, "message": "AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 23, "message": "in test_detect_passive_voice"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:23: in test_detect_passive_voice\n    issues = analyzer.check(text)\n             ^^^^^^^^^^^^^^\nE   AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "teardown": {"duration": 9.909600339597091e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer::test_active_voice_no_issues", "lineno": 25, "outcome": "failed", "keywords": ["test_active_voice_no_issues", "TestPassiveVoiceAnalyzer", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015482099843211472, "outcome": "passed"}, "call": {"duration": 0.004593405996274669, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 31, "message": "AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 31, "message": "in test_active_voice_no_issues"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:31: in test_active_voice_no_issues\n    issues = analyzer.check(text)\n             ^^^^^^^^^^^^^^\nE   AttributeError: 'PassiveVoiceAnalyzer' object has no attribute 'check'"}, "teardown": {"duration": 0.00011227100185351446, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule::test_missing_article", "lineno": 38, "outcome": "failed", "keywords": ["test_missing_article", "TestArticlesRule", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016766499902587384, "outcome": "passed"}, "call": {"duration": 0.00465116400300758, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 44, "message": "AttributeError: 'ArticlesRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 44, "message": "in test_missing_article"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:44: in test_missing_article\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'ArticlesRule' object has no attribute 'check'"}, "teardown": {"duration": 9.900599980028346e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule::test_correct_articles", "lineno": 47, "outcome": "failed", "keywords": ["test_correct_articles", "TestArticlesRule", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015249699936248362, "outcome": "passed"}, "call": {"duration": 0.004481695999857038, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 53, "message": "AttributeError: 'ArticlesRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 53, "message": "in test_correct_articles"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:53: in test_correct_articles\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'ArticlesRule' object has no attribute 'check'"}, "teardown": {"duration": 9.56090007093735e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule::test_verb_agreement", "lineno": 60, "outcome": "failed", "keywords": ["test_verb_agreement", "TestVerbsRule", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016088300617411733, "outcome": "passed"}, "call": {"duration": 0.009022993996040896, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 66, "message": "AttributeError: 'VerbsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 66, "message": "in test_verb_agreement"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:66: in test_verb_agreement\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'VerbsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00013194699567975476, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule::test_correct_verbs", "lineno": 69, "outcome": "failed", "keywords": ["test_correct_verbs", "TestVerbsRule", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00017670200031716377, "outcome": "passed"}, "call": {"duration": 0.009021120000397786, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 75, "message": "AttributeError: 'VerbsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 75, "message": "in test_correct_verbs"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:75: in test_correct_verbs\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'VerbsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00012012600200250745, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule::test_pronoun_usage", "lineno": 83, "outcome": "failed", "keywords": ["test_pronoun_usage", "TestPronounsRule", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001776429999154061, "outcome": "passed"}, "call": {"duration": 0.004870547003520187, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 89, "message": "AttributeError: 'PronounsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 89, "message": "in test_pronoun_usage"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:89: in test_pronoun_usage\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'PronounsRule' object has no attribute 'check'"}, "teardown": {"duration": 9.930599480867386e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule::test_ambiguous_pronouns", "lineno": 91, "outcome": "failed", "keywords": ["test_ambiguous_pronouns", "TestPronounsRule", "unit", "test_grammar_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016062200302258134, "outcome": "passed"}, "call": {"duration": 0.004536689004453365, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_grammar_rules.py", "lineno": 97, "message": "AttributeError: 'PronounsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_grammar_rules.py", "lineno": 97, "message": "in test_ambiguous_pronouns"}], "longrepr": "tests/unit/rules/test_grammar_rules.py:97: in test_ambiguous_pronouns\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'PronounsRule' object has no attribute 'check'"}, "teardown": {"duration": 9.882599988486618e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule::test_comma_usage", "lineno": 17, "outcome": "failed", "keywords": ["test_comma_usage", "TestCommasRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015875799726927653, "outcome": "passed"}, "call": {"duration": 0.004547208998701535, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 23, "message": "AttributeError: 'CommasRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 23, "message": "in test_comma_usage"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:23: in test_comma_usage\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'CommasRule' object has no attribute 'check'"}, "teardown": {"duration": 0.0001263070007553324, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule::test_missing_comma", "lineno": 25, "outcome": "failed", "keywords": ["test_missing_comma", "TestCommasRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001778840014594607, "outcome": "passed"}, "call": {"duration": 0.00453940499573946, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 31, "message": "AttributeError: 'CommasRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 31, "message": "in test_missing_comma"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:31: in test_missing_comma\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'CommasRule' object has no attribute 'check'"}, "teardown": {"duration": 9.596000018063933e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule::test_period_usage", "lineno": 39, "outcome": "failed", "keywords": ["test_period_usage", "TestPeriodsRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00018015800014836714, "outcome": "passed"}, "call": {"duration": 0.004558880995318759, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 45, "message": "AttributeError: 'PeriodsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 45, "message": "in test_period_usage"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:45: in test_period_usage\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'PeriodsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00010441600170452148, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule::test_missing_period", "lineno": 47, "outcome": "failed", "keywords": ["test_missing_period", "TestPeriodsRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00021692799782613292, "outcome": "passed"}, "call": {"duration": 0.004534135005087592, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 53, "message": "AttributeError: 'PeriodsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 53, "message": "in test_missing_period"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:53: in test_missing_period\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'PeriodsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00010193100024480373, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule::test_quotation_marks", "lineno": 61, "outcome": "failed", "keywords": ["test_quotation_marks", "TestQuotationMarksRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016504000086570159, "outcome": "passed"}, "call": {"duration": 0.004428537002240773, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 67, "message": "AttributeError: 'QuotationMarksRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 67, "message": "in test_quotation_marks"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:67: in test_quotation_marks\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'QuotationMarksRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00010746200132416561, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule::test_mismatched_quotes", "lineno": 69, "outcome": "failed", "keywords": ["test_mismatched_quotes", "TestQuotationMarksRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001488289999542758, "outcome": "passed"}, "call": {"duration": 0.0044975159980822355, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 75, "message": "AttributeError: 'QuotationMarksRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 75, "message": "in test_mismatched_quotes"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:75: in test_mismatched_quotes\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'QuotationMarksRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00011146000178996474, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule::test_hyphen_usage", "lineno": 83, "outcome": "failed", "keywords": ["test_hyphen_usage", "TestHyphensRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016062200302258134, "outcome": "passed"}, "call": {"duration": 0.004830561003473122, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 89, "message": "AttributeError: 'HyphensRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 89, "message": "in test_hyphen_usage"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:89: in test_hyphen_usage\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'HyphensRule' object has no attribute 'check'"}, "teardown": {"duration": 9.181300265481696e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule::test_missing_hyphen", "lineno": 91, "outcome": "failed", "keywords": ["test_missing_hyphen", "TestHyphensRule", "unit", "test_punctuation_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015444000018760562, "outcome": "passed"}, "call": {"duration": 0.004521029994066339, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_punctuation_rules.py", "lineno": 97, "message": "AttributeError: 'HyphensRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_punctuation_rules.py", "lineno": 97, "message": "in test_missing_hyphen"}], "longrepr": "tests/unit/rules/test_punctuation_rules.py:97: in test_missing_hyphen\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'HyphensRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00010746099724201486, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule::test_long_sentence_detected", "lineno": 17, "outcome": "failed", "keywords": ["test_long_sentence_detected", "TestSentenceLengthRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015482099843211472, "outcome": "passed"}, "call": {"duration": 0.004492496002058033, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 25, "message": "AttributeError: 'SentenceLengthRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 25, "message": "in test_long_sentence_detected"}], "longrepr": "tests/unit/rules/test_style_rules.py:25: in test_long_sentence_detected\n    issues = rule.check(long_text)\n             ^^^^^^^^^^\nE   AttributeError: 'SentenceLengthRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00014330900012282655, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule::test_short_sentences_ok", "lineno": 27, "outcome": "failed", "keywords": ["test_short_sentences_ok", "TestSentenceLengthRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001845660008257255, "outcome": "passed"}, "call": {"duration": 0.00448430200049188, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 33, "message": "AttributeError: 'SentenceLengthRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 33, "message": "in test_short_sentences_ok"}], "longrepr": "tests/unit/rules/test_style_rules.py:33: in test_short_sentences_ok\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'SentenceLengthRule' object has no attribute 'check'"}, "teardown": {"duration": 9.854500240180641e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule::test_detect_second_person", "lineno": 40, "outcome": "failed", "keywords": ["test_detect_second_person", "TestSecondPersonRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00015344800340244547, "outcome": "passed"}, "call": {"duration": 0.004492385996854864, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 46, "message": "AttributeError: 'SecondPersonRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 46, "message": "in test_detect_second_person"}], "longrepr": "tests/unit/rules/test_style_rules.py:46: in test_detect_second_person\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'SecondPersonRule' object has no attribute 'check'"}, "teardown": {"duration": 9.756300278240815e-05, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule::test_third_person_preferred", "lineno": 49, "outcome": "failed", "keywords": ["test_third_person_preferred", "TestSecondPersonRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00016021099872887135, "outcome": "passed"}, "call": {"duration": 0.004548501005047001, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 55, "message": "AttributeError: 'SecondPersonRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 55, "message": "in test_third_person_preferred"}], "longrepr": "tests/unit/rules/test_style_rules.py:55: in test_third_person_preferred\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'SecondPersonRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00011335299495840445, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule::test_heading_format", "lineno": 62, "outcome": "failed", "keywords": ["test_heading_format", "TestHeadingsRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001777239958755672, "outcome": "passed"}, "call": {"duration": 0.004530338002950884, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 68, "message": "AttributeError: 'HeadingsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 68, "message": "in test_heading_format"}], "longrepr": "tests/unit/rules/test_style_rules.py:68: in test_heading_format\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'HeadingsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00010010799451265484, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule::test_improper_heading_hierarchy", "lineno": 70, "outcome": "failed", "keywords": ["test_improper_heading_hierarchy", "TestHeadingsRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.0001833040005294606, "outcome": "passed"}, "call": {"duration": 0.00477430599858053, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 76, "message": "AttributeError: 'HeadingsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 76, "message": "in test_improper_heading_hierarchy"}], "longrepr": "tests/unit/rules/test_style_rules.py:76: in test_improper_heading_hierarchy\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'HeadingsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.00010076000035041943, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule::test_list_format", "lineno": 84, "outcome": "failed", "keywords": ["test_list_format", "TestListsRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00017092099733417854, "outcome": "passed"}, "call": {"duration": 0.0046283810006571, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 95, "message": "AttributeError: 'ListsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 95, "message": "in test_list_format"}], "longrepr": "tests/unit/rules/test_style_rules.py:95: in test_list_format\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'ListsRule' object has no attribute 'check'"}, "teardown": {"duration": 0.0001112789977923967, "outcome": "passed"}}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule::test_inconsistent_list_punctuation", "lineno": 97, "outcome": "failed", "keywords": ["test_inconsistent_list_punctuation", "TestListsRule", "unit", "test_style_rules.py", "rules", "tests", "content-editorial-assiatant", ""], "setup": {"duration": 0.00018157099839299917, "outcome": "passed"}, "call": {"duration": 0.004525478005234618, "outcome": "failed", "crash": {"path": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/rules/test_style_rules.py", "lineno": 107, "message": "AttributeError: 'ListsRule' object has no attribute 'check'"}, "traceback": [{"path": "tests/unit/rules/test_style_rules.py", "lineno": 107, "message": "in test_inconsistent_list_punctuation"}], "longrepr": "tests/unit/rules/test_style_rules.py:107: in test_inconsistent_list_punctuation\n    issues = rule.check(text)\n             ^^^^^^^^^^\nE   AttributeError: 'ListsRule' object has no attribute 'check'"}, "teardown": {"duration": 9.982799383578822e-05, "outcome": "passed"}}], "warnings": [{"message": "Can't initialize NVML", "category": "UserWarning", "when": "collect", "filename": "/home/gtrivedi/.local/lib/python3.13/site-packages/torch/cuda/__init__.py", "lineno": 829}, {"message": "builtin type SwigPyPacked has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyObject has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyPacked has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyObject has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type swigvarlink has no __module__ attribute", "category": "DeprecationWarning", "when": "runtest", "filename": "<frozen importlib._bootstrap>", "lineno": 488}]}