{"created": 1759346783.2835972, "duration": 11.297976016998291, "exitcode": 2, "root": "/home/gtrivedi/Documents/GitLab/content-editorial-assiatant", "environment": {}, "summary": {"total": 0, "collected": 243}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/unit", "type": "Package"}]}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_check_method", "type": "Function", "lineno": 13}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_check_returns_list", "type": "Function", "lineno": 18}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_name", "type": "Function", "lineno": 25}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule::test_base_rule_has_description", "type": "Function", "lineno": 30}]}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_returns_error_format", "type": "Function", "lineno": 40}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_handles_empty_text", "type": "Function", "lineno": 52}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface::test_rule_handles_none_text", "type": "Function", "lineno": 60}]}, {"nodeid": "tests/unit/rules/test_base_rule.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py::TestBaseRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_base_rule.py::TestRuleInterface", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist::test_all_rules_importable", "type": "Function", "lineno": 31}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist::test_all_rules_have_check_method", "type": "Function", "lineno": 46}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_language_grammar_rules", "type": "Function", "lineno": 71}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_punctuation_rules", "type": "Function", "lineno": 82}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_word_usage_rules", "type": "Function", "lineno": 92}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_structure_format_rules", "type": "Function", "lineno": 100}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_numbers_measurement_rules", "type": "Function", "lineno": 110}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories::test_technical_elements_rules", "type": "Function", "lineno": 117}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_base_rule_interface", "type": "Function", "lineno": 129}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_rule_check_returns_list", "type": "Function", "lineno": 136}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface::test_rule_handles_empty_text", "type": "Function", "lineno": 143}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration::test_multiple_rules_on_same_text", "type": "Function", "lineno": 156}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration::test_rules_with_different_severities", "type": "Function", "lineno": 176}]}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestAllRulesExist", "type": "Class"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleCategories", "type": "Class"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleInterface", "type": "Class"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py::TestRuleIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer::test_detect_passive_voice", "type": "Function", "lineno": 17}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer::test_active_voice_no_issues", "type": "Function", "lineno": 25}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule::test_missing_article", "type": "Function", "lineno": 38}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule::test_correct_articles", "type": "Function", "lineno": 47}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule::test_verb_agreement", "type": "Function", "lineno": 60}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule::test_correct_verbs", "type": "Function", "lineno": 69}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule::test_pronoun_usage", "type": "Function", "lineno": 83}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule::test_ambiguous_pronouns", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/unit/rules/test_grammar_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPassiveVoiceAnalyzer", "type": "Class"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestArticlesRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestVerbsRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py::TestPronounsRule", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule::test_comma_usage", "type": "Function", "lineno": 17}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule::test_missing_comma", "type": "Function", "lineno": 25}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule::test_period_usage", "type": "Function", "lineno": 39}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule::test_missing_period", "type": "Function", "lineno": 47}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule::test_quotation_marks", "type": "Function", "lineno": 61}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule::test_mismatched_quotes", "type": "Function", "lineno": 69}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule::test_hyphen_usage", "type": "Function", "lineno": 83}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule::test_missing_hyphen", "type": "Function", "lineno": 91}]}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestCommasRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestPeriodsRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestQuotationMarksRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py::TestHyphensRule", "type": "Class"}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule::test_long_sentence_detected", "type": "Function", "lineno": 17}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule::test_short_sentences_ok", "type": "Function", "lineno": 27}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule::test_detect_second_person", "type": "Function", "lineno": 40}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule::test_third_person_preferred", "type": "Function", "lineno": 49}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule::test_heading_format", "type": "Function", "lineno": 62}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule::test_improper_heading_hierarchy", "type": "Function", "lineno": 70}]}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule::test_list_format", "type": "Function", "lineno": 84}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule::test_inconsistent_list_punctuation", "type": "Function", "lineno": 97}]}, {"nodeid": "tests/unit/rules/test_style_rules.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_style_rules.py::TestSentenceLengthRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestSecondPersonRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestHeadingsRule", "type": "Class"}, {"nodeid": "tests/unit/rules/test_style_rules.py::TestListsRule", "type": "Class"}]}, {"nodeid": "tests/unit/rules", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules/test_base_rule.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_comprehensive_rules.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_grammar_rules.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_punctuation_rules.py", "type": "Module"}, {"nodeid": "tests/unit/rules/test_style_rules.py", "type": "Module"}]}, {"nodeid": "tests/unit/test_ambiguity.py", "outcome": "failed", "result": [], "longrepr": "../../../.local/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n../../../.local/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib64/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n../../../.local/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/unit/test_ambiguity.py:11: in <module>\n    from ambiguity.detectors.pronoun_detector import PronounDetector\nambiguity/detectors/__init__.py:12: in <module>\n    from .fabrication_risk_detector import FabricationRiskDetector\nE     File \"/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/ambiguity/detectors/fabrication_risk_detector.py\", line 448\nE       return True\nE   IndentationError: expected an indented block after 'if' statement on line 447"}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestEnhancedMissingActorDetector", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ambiguity_detection.py::TestEnhancedMissingActorDetector::test_evidence_based_confidence_calculation", "type": "Function", "lineno": 33}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestEnhancedMissingActorDetector::test_universal_threshold_compliance", "type": "Function", "lineno": 76}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestEnhancedMissingActorDetector::test_context_aware_domain_adjustment", "type": "Function", "lineno": 105}]}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation::test_detect_vague_actors", "type": "Function", "lineno": 155}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation::test_detect_new_passive_voice", "type": "Function", "lineno": 171}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation::test_detect_generic_pronoun_proliferation", "type": "Function", "lineno": 185}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation::test_meaning_preservation_check", "type": "Function", "lineno": 199}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation::test_verb_correction_validation", "type": "Function", "lineno": 213}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation::test_no_false_positives_for_good_rewrites", "type": "Function", "lineno": 227}]}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestIntegrationWithAssemblyLine", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ambiguity_detection.py::TestIntegrationWithAssemblyLine::test_confidence_threshold_integration", "type": "Function", "lineno": 252}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestIntegrationWithAssemblyLine::test_assembly_line_prompt_enhancement", "type": "Function", "lineno": 263}]}, {"nodeid": "tests/unit/test_ambiguity_detection.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ambiguity_detection.py::TestEnhancedMissingActorDetector", "type": "Class"}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestPostRewriteValidation", "type": "Class"}, {"nodeid": "tests/unit/test_ambiguity_detection.py::TestIntegrationWithAssemblyLine", "type": "Class"}, {"nodeid": "tests/unit/test_ambiguity_detection.py::test_performance_benchmark", "type": "Function", "lineno": 276}]}, {"nodeid": "tests/unit/test_app_modules.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/test_app_modules.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib64/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/test_app_modules.py:14: in <module>\n    from app_modules.fallback_services import FallbackServices\nE   ImportError: cannot import name 'FallbackServices' from 'app_modules.fallback_services' (/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/app_modules/fallback_services.py). Did you mean: 'fallback_services'?"}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_no_consolidation_needed_single_error", "type": "Function", "lineno": 45}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_no_consolidation_needed_different_spans", "type": "Function", "lineno": 63}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_consolidation_same_span_grammar_wins", "type": "Function", "lineno": 87}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_consolidation_priority_scoring", "type": "Function", "lineno": 124}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_span_key_creation", "type": "Function", "lineno": 163}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_priority_scoring_logic", "type": "Function", "lineno": 198}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_consolidation_with_suggestions", "type": "Function", "lineno": 222}, {"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation::test_real_world_conflict_scenario", "type": "Function", "lineno": 250}]}, {"nodeid": "tests/unit/test_consolidation.py::TestConsolidationIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_consolidation.py::TestConsolidationIntegration::test_consolidation_in_station_processing", "type": "Function", "lineno": 299}]}, {"nodeid": "tests/unit/test_consolidation.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_consolidation.py::TestInstructionConsolidation", "type": "Class"}, {"nodeid": "tests/unit/test_consolidation.py::TestConsolidationIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/test_database_services.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/test_database_services.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib64/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/test_database_services.py:11: in <module>\n    from database.models import db, UserSession, Document, Analysis, Feedback\nE   ImportError: cannot import name 'Analysis' from 'database.models' (/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/database/models.py)"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAParserBasics", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAParserBasics::test_empty_dita_document", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAParserBasics::test_minimal_concept", "type": "TestCaseFunction", "lineno": 40}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAConceptTopics", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAConceptTopics::test_comprehensive_concept", "type": "TestCaseFunction", "lineno": 68}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAConceptTopics::test_concept_with_nested_sections", "type": "TestCaseFunction", "lineno": 151}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITATaskTopics", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITATaskTopics::test_comprehensive_task", "type": "TestCaseFunction", "lineno": 184}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITATaskTopics::test_task_with_complex_steps", "type": "TestCaseFunction", "lineno": 286}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAReferenceTopics", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAReferenceTopics::test_comprehensive_reference", "type": "TestCaseFunction", "lineno": 323}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITATaskTopicsAdvanced", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITATaskTopicsAdvanced::test_complex_task_with_all_elements", "type": "TestCaseFunction", "lineno": 447}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITATroubleshootingTopics", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITATroubleshootingTopics::test_troubleshooting_topic", "type": "TestCaseFunction", "lineno": 605}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAListsAndTables", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAListsAndTables::test_all_list_types", "type": "TestCaseFunction", "lineno": 671}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAListsAndTables::test_complex_tables", "type": "TestCaseFunction", "lineno": 745}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAInlineElements", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAInlineElements::test_comprehensive_inline_elements", "type": "TestCaseFunction", "lineno": 827}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAAdmonitions", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAAdmonitions::test_all_note_types", "type": "TestCaseFunction", "lineno": 883}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITACodeAndTechnicalElements", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITACodeAndTechnicalElements::test_comprehensive_code_elements", "type": "TestCaseFunction", "lineno": 960}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITASpecializationAndDomains", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITASpecializationAndDomains::test_programming_domain", "type": "TestCaseFunction", "lineno": 1054}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITASpecializationAndDomains::test_ui_domain", "type": "TestCaseFunction", "lineno": 1092}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAEdgeCases", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAEdgeCases::test_empty_elements", "type": "TestCaseFunction", "lineno": 1149}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAEdgeCases::test_malformed_xml", "type": "TestCaseFunction", "lineno": 1132}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAEdgeCases::test_nested_complex_structures", "type": "TestCaseFunction", "lineno": 1268}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAEdgeCases::test_unicode_content", "type": "TestCaseFunction", "lineno": 1173}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAEdgeCases::test_very_large_dita_document", "type": "TestCaseFunction", "lineno": 1222}]}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITACompatibility", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITACompatibility::test_context_info_generation", "type": "TestCaseFunction", "lineno": 1380}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITACompatibility::test_style_analysis_compatibility", "type": "TestCaseFunction", "lineno": 1341}]}, {"nodeid": "tests/unit/test_dita_parser.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_dita_parser.py::TestDITAParserBasics", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAConceptTopics", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITATaskTopics", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAReferenceTopics", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITATaskTopicsAdvanced", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITATroubleshootingTopics", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAListsAndTables", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAInlineElements", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAAdmonitions", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITACodeAndTechnicalElements", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITASpecializationAndDomains", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITAEdgeCases", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_dita_parser.py::TestDITACompatibility", "type": "UnitTestCase"}]}, {"nodeid": "tests/unit/test_error_consolidation.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/test_error_consolidation.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib64/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/test_error_consolidation.py:12: in <module>\n    from error_consolidation.rule_priority import RulePriority\nE   ImportError: cannot import name 'RulePriority' from 'error_consolidation.rule_priority' (/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/error_consolidation/rule_priority.py). Did you mean: 'rule_priority'?"}, {"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis::test_empty_input_density_analysis", "type": "Function", "lineno": 50}, {"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis::test_single_sentence_low_density", "type": "Function", "lineno": 67}, {"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis::test_single_sentence_high_density", "type": "Function", "lineno": 83}, {"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis::test_multiple_sentences_mixed_density", "type": "Function", "lineno": 109}, {"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis::test_weighted_error_density_calculation", "type": "Function", "lineno": 138}, {"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis::test_sentence_length_factor_adjustment", "type": "Function", "lineno": 165}, {"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis::test_density_threshold_adjustment_by_sentence_length", "type": "Function", "lineno": 196}]}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt::test_holistic_prompt_creation", "type": "Function", "lineno": 227}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt::test_holistic_prompt_improvement_goals_structural_issues", "type": "Function", "lineno": 249}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt::test_holistic_prompt_improvement_goals_grammar_issues", "type": "Function", "lineno": 265}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt::test_holistic_prompt_improvement_goals_style_issues", "type": "Function", "lineno": 281}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt::test_holistic_prompt_improvement_goals_technical_issues", "type": "Function", "lineno": 297}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt::test_holistic_prompt_json_format_requirement", "type": "Function", "lineno": 312}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt::test_holistic_prompt_error_density_context", "type": "Function", "lineno": 325}]}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewriteIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_error_density.py::TestHolisticRewriteIntegration::test_holistic_rewrite_application_success", "type": "Function", "lineno": 347}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewriteIntegration::test_holistic_rewrite_application_no_changes", "type": "Function", "lineno": 382}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewriteIntegration::test_holistic_rewrite_application_failure", "type": "Function", "lineno": 407}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewriteIntegration::test_holistic_confidence_calculation", "type": "Function", "lineno": 433}]}, {"nodeid": "tests/unit/test_error_density.py::TestCircuitBreakerIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_error_density.py::TestCircuitBreakerIntegration::test_circuit_breaker_triggers_holistic_rewrite", "type": "Function", "lineno": 476}, {"nodeid": "tests/unit/test_error_density.py::TestCircuitBreakerIntegration::test_circuit_breaker_allows_normal_processing", "type": "Function", "lineno": 517}]}, {"nodeid": "tests/unit/test_error_density.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_error_density.py::TestErrorDensityAnalysis", "type": "Class"}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewritePrompt", "type": "Class"}, {"nodeid": "tests/unit/test_error_density.py::TestHolisticRewriteIntegration", "type": "Class"}, {"nodeid": "tests/unit/test_error_density.py::TestCircuitBreakerIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownParserBasics", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownParserBasics::test_empty_document", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownParserBasics::test_multiple_paragraphs", "type": "TestCaseFunction", "lineno": 48}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownParserBasics::test_simple_paragraph", "type": "TestCaseFunction", "lineno": 35}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownHeadings", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownHeadings::test_all_heading_levels", "type": "TestCaseFunction", "lineno": 72}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownHeadings::test_heading_with_trailing_spaces", "type": "TestCaseFunction", "lineno": 94}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownLists", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownLists::test_mixed_list_markers", "type": "TestCaseFunction", "lineno": 167}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownLists::test_nested_lists", "type": "TestCaseFunction", "lineno": 152}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownLists::test_simple_ordered_list", "type": "TestCaseFunction", "lineno": 138}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownLists::test_simple_unordered_list", "type": "TestCaseFunction", "lineno": 119}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownCodeBlocks", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownCodeBlocks::test_fenced_code_block", "type": "TestCaseFunction", "lineno": 190}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownCodeBlocks::test_fenced_code_block_no_language", "type": "TestCaseFunction", "lineno": 209}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownCodeBlocks::test_indented_code_block", "type": "TestCaseFunction", "lineno": 224}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownCodeBlocks::test_inline_code", "type": "TestCaseFunction", "lineno": 241}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownQuotes", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownQuotes::test_multiline_blockquote", "type": "TestCaseFunction", "lineno": 272}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownQuotes::test_nested_blockquote", "type": "TestCaseFunction", "lineno": 285}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownQuotes::test_simple_blockquote", "type": "TestCaseFunction", "lineno": 260}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownTables", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownTables::test_simple_table", "type": "TestCaseFunction", "lineno": 302}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownTables::test_table_with_alignment", "type": "TestCaseFunction", "lineno": 318}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownTables::test_table_with_missing_cells", "type": "TestCaseFunction", "lineno": 329}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownMixedContent", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownMixedContent::test_comprehensive_document", "type": "TestCaseFunction", "lineno": 349}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownMixedContent::test_document_with_horizontal_rules", "type": "TestCaseFunction", "lineno": 426}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownMixedContent::test_document_with_html_blocks", "type": "TestCaseFunction", "lineno": 412}]}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases::test_deeply_nested_structures", "type": "TestCaseFunction", "lineno": 500}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases::test_malformed_headings", "type": "TestCaseFunction", "lineno": 476}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases::test_mixed_line_endings", "type": "TestCaseFunction", "lineno": 513}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases::test_unclosed_code_blocks", "type": "TestCaseFunction", "lineno": 488}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases::test_unicode_content", "type": "TestCaseFunction", "lineno": 521}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases::test_very_long_lines", "type": "TestCaseFunction", "lineno": 467}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases::test_whitespace_only_document", "type": "TestCaseFunction", "lineno": 458}]}, {"nodeid": "tests/unit/test_markdown_parser.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownParserBasics", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownHeadings", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownLists", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownCodeBlocks", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownQuotes", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownTables", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownMixedContent", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_markdown_parser.py::TestMarkdownEdgeCases", "type": "UnitTestCase"}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataConfig", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataConfig::test_config_validation", "type": "TestCaseFunction", "lineno": 63}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataConfig::test_custom_config_loading", "type": "TestCaseFunction", "lineno": 45}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataConfig::test_default_config_initialization", "type": "TestCaseFunction", "lineno": 34}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataConfig::test_taxonomy_config_loading", "type": "TestCaseFunction", "lineno": 74}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTitleExtractor", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestTitleExtractor::test_asciidoc_title_extraction", "type": "TestCaseFunction", "lineno": 133}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTitleExtractor::test_empty_content_handling", "type": "TestCaseFunction", "lineno": 167}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTitleExtractor::test_markdown_title_extraction", "type": "TestCaseFunction", "lineno": 99}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTitleExtractor::test_no_explicit_title_fallback", "type": "TestCaseFunction", "lineno": 145}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTitleExtractor::test_title_cleaning", "type": "TestCaseFunction", "lineno": 160}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestKeywordExtractor", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestKeywordExtractor::test_capitalized_terms_extraction", "type": "TestCaseFunction", "lineno": 239}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestKeywordExtractor::test_frequency_based_extraction", "type": "TestCaseFunction", "lineno": 253}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestKeywordExtractor::test_keyword_extraction_relevance", "type": "TestCaseFunction", "lineno": 183}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestKeywordExtractor::test_minimum_keyword_length", "type": "TestCaseFunction", "lineno": 267}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestKeywordExtractor::test_technical_term_boosting", "type": "TestCaseFunction", "lineno": 223}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestDescriptionExtractor", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestDescriptionExtractor::test_description_generation_quality", "type": "TestCaseFunction", "lineno": 288}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestDescriptionExtractor::test_description_truncation", "type": "TestCaseFunction", "lineno": 348}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestDescriptionExtractor::test_description_with_ai_refinement", "type": "TestCaseFunction", "lineno": 324}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestDescriptionExtractor::test_fallback_description_extraction", "type": "TestCaseFunction", "lineno": 337}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier::test_api_documentation_classification", "type": "TestCaseFunction", "lineno": 450}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier::test_installation_classification", "type": "TestCaseFunction", "lineno": 423}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier::test_low_confidence_filtering", "type": "TestCaseFunction", "lineno": 508}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier::test_multiple_category_classification", "type": "TestCaseFunction", "lineno": 481}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier::test_semantic_similarity_classification", "type": "TestCaseFunction", "lineno": 521}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier::test_troubleshooting_classification", "type": "TestCaseFunction", "lineno": 391}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_basic_metadata_generation", "type": "TestCaseFunction", "lineno": 568}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_caching_functionality", "type": "TestCaseFunction", "lineno": 722}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_different_content_types", "type": "TestCaseFunction", "lineno": 618}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_empty_content_handling", "type": "TestCaseFunction", "lineno": 647}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_error_recovery_and_fallbacks", "type": "TestCaseFunction", "lineno": 696}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_health_status", "type": "TestCaseFunction", "lineno": 770}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_initialization", "type": "TestCaseFunction", "lineno": 560}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_output_formatting", "type": "TestCaseFunction", "lineno": 750}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_oversized_content_handling", "type": "TestCaseFunction", "lineno": 655}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant::test_progress_callback_integration", "type": "TestCaseFunction", "lineno": 666}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestIntegration::test_spacy_integration", "type": "TestCaseFunction", "lineno": 792}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestIntegration::test_structural_blocks_integration", "type": "TestCaseFunction", "lineno": 815}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestPerformance", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestPerformance::test_concurrent_processing", "type": "TestCaseFunction", "lineno": 886}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestPerformance::test_processing_time_benchmarks", "type": "TestCaseFunction", "lineno": 860}]}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestUserAcceptance", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestUserAcceptance::test_metadata_consistency", "type": "TestCaseFunction", "lineno": 1075}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestUserAcceptance::test_real_world_api_documentation", "type": "TestCaseFunction", "lineno": 968}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestUserAcceptance::test_real_world_troubleshooting_guide", "type": "TestCaseFunction", "lineno": 1016}]}, {"nodeid": "tests/unit/test_metadata_assistant.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataConfig", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTitleExtractor", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestKeywordExtractor", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestDescriptionExtractor", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestTaxonomyClassifier", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestMetadataAssistant", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestIntegration", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestPerformance", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_metadata_assistant.py::TestUserAcceptance", "type": "UnitTestCase"}]}, {"nodeid": "tests/unit/test_models.py::TestModelFactory", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_models.py::TestModelFactory::test_factory_initialization", "type": "Function", "lineno": 17}, {"nodeid": "tests/unit/test_models.py::TestModelFactory::test_create_model", "type": "Function", "lineno": 22}, {"nodeid": "tests/unit/test_models.py::TestModelFactory::test_list_available_models", "type": "Function", "lineno": 30}, {"nodeid": "tests/unit/test_models.py::TestModelFactory::test_get_model_info", "type": "Function", "lineno": 37}]}, {"nodeid": "tests/unit/test_models.py::TestModelManager", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_models.py::TestModelManager::test_manager_initialization", "type": "Function", "lineno": 49}, {"nodeid": "tests/unit/test_models.py::TestModelManager::test_load_model", "type": "Function", "lineno": 54}, {"nodeid": "tests/unit/test_models.py::TestModelManager::test_get_active_model", "type": "Function", "lineno": 64}, {"nodeid": "tests/unit/test_models.py::TestModelManager::test_switch_model", "type": "Function", "lineno": 71}]}, {"nodeid": "tests/unit/test_models.py::TestModelConfig", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_models.py::TestModelConfig::test_config_initialization", "type": "Function", "lineno": 83}, {"nodeid": "tests/unit/test_models.py::TestModelConfig::test_get_config_value", "type": "Function", "lineno": 88}, {"nodeid": "tests/unit/test_models.py::TestModelConfig::test_set_config_value", "type": "Function", "lineno": 95}, {"nodeid": "tests/unit/test_models.py::TestModelConfig::test_validate_config", "type": "Function", "lineno": 102}]}, {"nodeid": "tests/unit/test_models.py::TestModelIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_models.py::TestModelIntegration::test_complete_model_workflow", "type": "Function", "lineno": 114}]}, {"nodeid": "tests/unit/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_models.py::TestModelFactory", "type": "Class"}, {"nodeid": "tests/unit/test_models.py::TestModelManager", "type": "Class"}, {"nodeid": "tests/unit/test_models.py::TestModelConfig", "type": "Class"}, {"nodeid": "tests/unit/test_models.py::TestModelIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserBasics", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserBasics::test_empty_document", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserBasics::test_mixed_paragraph_styles", "type": "TestCaseFunction", "lineno": 79}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserBasics::test_multiple_paragraphs", "type": "TestCaseFunction", "lineno": 48}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserBasics::test_paragraph_with_line_breaks", "type": "TestCaseFunction", "lineno": 65}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserBasics::test_simple_paragraph", "type": "TestCaseFunction", "lineno": 35}]}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_excessive_blank_lines", "type": "TestCaseFunction", "lineno": 204}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_markdown_like_content", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_mixed_line_endings", "type": "TestCaseFunction", "lineno": 131}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_none_content", "type": "TestCaseFunction", "lineno": 113}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_special_characters", "type": "TestCaseFunction", "lineno": 161}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_unicode_content", "type": "TestCaseFunction", "lineno": 139}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_very_long_lines", "type": "TestCaseFunction", "lineno": 121}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases::test_whitespace_only_document", "type": "TestCaseFunction", "lineno": 104}]}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextLineBased", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextLineBased::test_parse_as_lines_performance", "type": "TestCaseFunction", "lineno": 264}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextLineBased::test_parse_as_lines_simple", "type": "TestCaseFunction", "lineno": 233}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextLineBased::test_parse_as_lines_with_empty_lines", "type": "TestCaseFunction", "lineno": 248}]}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextCompatibility", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextCompatibility::test_context_info_generation", "type": "TestCaseFunction", "lineno": 316}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextCompatibility::test_inline_formatting_detection", "type": "TestCaseFunction", "lineno": 338}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextCompatibility::test_serialization_to_dict", "type": "TestCaseFunction", "lineno": 351}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextCompatibility::test_skip_analysis_flags", "type": "TestCaseFunction", "lineno": 287}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextCompatibility::test_text_content_extraction", "type": "TestCaseFunction", "lineno": 301}]}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextPerformance", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextPerformance::test_large_document_performance", "type": "TestCaseFunction", "lineno": 383}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextPerformance::test_many_paragraphs_performance", "type": "TestCaseFunction", "lineno": 431}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextPerformance::test_very_long_paragraph_performance", "type": "TestCaseFunction", "lineno": 413}]}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserInfo", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserInfo::test_parser_info", "type": "TestCaseFunction", "lineno": 461}]}, {"nodeid": "tests/unit/test_plaintext_parser.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserBasics", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextEdgeCases", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextLineBased", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextCompatibility", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextPerformance", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_plaintext_parser.py::TestPlainTextParserInfo", "type": "UnitTestCase"}]}, {"nodeid": "tests/unit/test_rewriter.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/test_rewriter.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib64/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/test_rewriter.py:9: in <module>\n    from rewriter.core import ContentRewriter\nE   ImportError: cannot import name 'ContentRewriter' from 'rewriter.core' (/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/rewriter/core.py). Did you mean: 'DocumentRewriter'?"}, {"nodeid": "tests/unit/test_structural_parsing.py::TestFormatDetector", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_structural_parsing.py::TestFormatDetector::test_detect_asciidoc", "type": "Function", "lineno": 16}, {"nodeid": "tests/unit/test_structural_parsing.py::TestFormatDetector::test_detect_markdown", "type": "Function", "lineno": 31}, {"nodeid": "tests/unit/test_structural_parsing.py::TestFormatDetector::test_detect_dita", "type": "Function", "lineno": 45}, {"nodeid": "tests/unit/test_structural_parsing.py::TestFormatDetector::test_detect_plaintext", "type": "Function", "lineno": 58}, {"nodeid": "tests/unit/test_structural_parsing.py::TestFormatDetector::test_detect_with_filename_hint", "type": "Function", "lineno": 67}]}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_factory_initialization", "type": "Function", "lineno": 88}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_get_parser_for_markdown", "type": "Function", "lineno": 93}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_get_parser_for_asciidoc", "type": "Function", "lineno": 101}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_get_parser_for_dita", "type": "Function", "lineno": 109}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_get_parser_for_plaintext", "type": "Function", "lineno": 117}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_parse_with_auto_detection", "type": "Function", "lineno": 125}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_parse_with_explicit_format", "type": "Function", "lineno": 136}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory::test_parse_with_filename_hint", "type": "Function", "lineno": 146}]}, {"nodeid": "tests/unit/test_structural_parsing.py::TestParserIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_structural_parsing.py::TestParserIntegration::test_markdown_full_workflow", "type": "Function", "lineno": 161}, {"nodeid": "tests/unit/test_structural_parsing.py::TestParserIntegration::test_asciidoc_full_workflow", "type": "Function", "lineno": 195}, {"nodeid": "tests/unit/test_structural_parsing.py::TestParserIntegration::test_plaintext_full_workflow", "type": "Function", "lineno": 219}, {"nodeid": "tests/unit/test_structural_parsing.py::TestParserIntegration::test_format_auto_detection_workflow", "type": "Function", "lineno": 236}]}, {"nodeid": "tests/unit/test_structural_parsing.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_structural_parsing.py::TestFormatDetector", "type": "Class"}, {"nodeid": "tests/unit/test_structural_parsing.py::TestStructuralParserFactory", "type": "Class"}, {"nodeid": "tests/unit/test_structural_parsing.py::TestParserIntegration", "type": "Class"}]}, {"nodeid": "tests/unit/test_style_analyzer.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/tests/unit/test_style_analyzer.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib64/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/unit/test_style_analyzer.py:9: in <module>\n    from style_analyzer.core_analyzer import CoreStyleAnalyzer\nE   ImportError: cannot import name 'CoreStyleAnalyzer' from 'style_analyzer.core_analyzer' (/home/gtrivedi/Documents/GitLab/content-editorial-assiatant/style_analyzer/core_analyzer.py). Did you mean: 'StyleAnalyzer'?"}, {"nodeid": "tests/unit/test_template_system.py::TestInstructionTemplateTracker", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_template_system.py::TestInstructionTemplateTracker::test_template_tracker_initialization", "type": "Function", "lineno": 76}, {"nodeid": "tests/unit/test_template_system.py::TestInstructionTemplateTracker::test_template_selection_by_performance", "type": "Function", "lineno": 95}, {"nodeid": "tests/unit/test_template_system.py::TestInstructionTemplateTracker::test_template_performance_recording", "type": "Function", "lineno": 110}, {"nodeid": "tests/unit/test_template_system.py::TestInstructionTemplateTracker::test_template_selection_with_actual_performance", "type": "Function", "lineno": 151}, {"nodeid": "tests/unit/test_template_system.py::TestInstructionTemplateTracker::test_data_persistence", "type": "Function", "lineno": 187}]}, {"nodeid": "tests/unit/test_template_system.py::TestPromptGeneratorIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_template_system.py::TestPromptGeneratorIntegration::test_prompt_generator_template_selection", "type": "Function", "lineno": 230}, {"nodeid": "tests/unit/test_template_system.py::TestPromptGeneratorIntegration::test_template_feedback_recording", "type": "Function", "lineno": 253}, {"nodeid": "tests/unit/test_template_system.py::TestPromptGeneratorIntegration::test_fallback_to_legacy_templates", "type": "Function", "lineno": 275}]}, {"nodeid": "tests/unit/test_template_system.py::TestEndToEndEvidenceBasedSystem", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_template_system.py::TestEndToEndEvidenceBasedSystem::test_complete_learning_cycle", "type": "Function", "lineno": 298}, {"nodeid": "tests/unit/test_template_system.py::TestEndToEndEvidenceBasedSystem::test_integration_with_consolidation", "type": "Function", "lineno": 403}]}, {"nodeid": "tests/unit/test_template_system.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_template_system.py::TestInstructionTemplateTracker", "type": "Class"}, {"nodeid": "tests/unit/test_template_system.py::TestPromptGeneratorIntegration", "type": "Class"}, {"nodeid": "tests/unit/test_template_system.py::TestEndToEndEvidenceBasedSystem", "type": "Class"}]}, {"nodeid": "tests/unit", "outcome": "passed", "result": [{"nodeid": "tests/unit/rules", "type": "Package"}, {"nodeid": "tests/unit/test_ambiguity.py", "type": "Module"}, {"nodeid": "tests/unit/test_ambiguity_detection.py", "type": "Module"}, {"nodeid": "tests/unit/test_app_modules.py", "type": "Module"}, {"nodeid": "tests/unit/test_consolidation.py", "type": "Module"}, {"nodeid": "tests/unit/test_database_services.py", "type": "Module"}, {"nodeid": "tests/unit/test_dita_parser.py", "type": "Module"}, {"nodeid": "tests/unit/test_error_consolidation.py", "type": "Module"}, {"nodeid": "tests/unit/test_error_density.py", "type": "Module"}, {"nodeid": "tests/unit/test_markdown_parser.py", "type": "Module"}, {"nodeid": "tests/unit/test_metadata_assistant.py", "type": "Module"}, {"nodeid": "tests/unit/test_models.py", "type": "Module"}, {"nodeid": "tests/unit/test_plaintext_parser.py", "type": "Module"}, {"nodeid": "tests/unit/test_rewriter.py", "type": "Module"}, {"nodeid": "tests/unit/test_structural_parsing.py", "type": "Module"}, {"nodeid": "tests/unit/test_style_analyzer.py", "type": "Module"}, {"nodeid": "tests/unit/test_template_system.py", "type": "Module"}]}], "tests": [], "warnings": [{"message": "Can't initialize NVML", "category": "UserWarning", "when": "collect", "filename": "/home/gtrivedi/.local/lib/python3.13/site-packages/torch/cuda/__init__.py", "lineno": 829}, {"message": "builtin type SwigPyPacked has no __module__ attribute", "category": "DeprecationWarning", "when": "collect", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyObject has no __module__ attribute", "category": "DeprecationWarning", "when": "collect", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyPacked has no __module__ attribute", "category": "DeprecationWarning", "when": "collect", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type SwigPyObject has no __module__ attribute", "category": "DeprecationWarning", "when": "collect", "filename": "<frozen importlib._bootstrap>", "lineno": 488}, {"message": "builtin type swigvarlink has no __module__ attribute", "category": "DeprecationWarning", "when": "collect", "filename": "<frozen importlib._bootstrap>", "lineno": 488}]}